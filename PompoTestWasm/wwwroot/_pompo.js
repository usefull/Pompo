//////////////////////////////////////////
// The factory for transmit .NET objects.
// Generated by Pompo 13.03.2025 17:22:47.
//////////////////////////////////////////

window.transmitFunc = (obj) => {
    window.dotNetObjectFactory = obj;
    
    window.dotNetObjectFactory.create_UsefulWorker = async () => {
        let o = null;
        window.transmitFunc = (obj) => o = obj;
        await window.dotNetObjectFactory.invokeMethodAsync(
            'Create_UsefulWorker'
        );

        o.GetId = async () => await o.invokeMethodAsync(
            'GetId'
        );

        delete window.transmitFunc;
        return o;
    };

    window.dotNetObjectFactory.create_Worker = async (id) => {
        let o = null;
        window.transmitFunc = (obj) => o = obj;
        await window.dotNetObjectFactory.invokeMethodAsync(
            'Create_Worker',
            id
        );

        o.GetId = async () => await o.invokeMethodAsync(
            'GetId'
        );

        delete window.transmitFunc;
        return o;
    };

    window.dotNetObjectFactory.create_FakeClient = async () => {
        let o = null;
        window.transmitFunc = (obj) => o = obj;
        await window.dotNetObjectFactory.invokeMethodAsync(
            'Create_FakeClient'
        );

        o.Run = async (iter) => await o.invokeMethodAsync(
            'Run',
            iter
        );

        o.PassObject = async (obj) => await o.invokeMethodAsync(
            'PassObject',
            obj
        );

        o.get = async () => await o.invokeMethodAsync(
            'get'
        );

        delete window.transmitFunc;
        return o;
    };

    window.dotNetObjectFactory.create_NamedClient = async (name) => {
        let o = null;
        window.transmitFunc = (obj) => o = obj;
        await window.dotNetObjectFactory.invokeMethodAsync(
            'Create_NamedClient',
            name
        );

        o.Run = async (iter) => await o.invokeMethodAsync(
            'Run',
            iter
        );

        o.PassObject = async (obj) => await o.invokeMethodAsync(
            'PassObject',
            obj
        );

        o.get = async () => await o.invokeMethodAsync(
            'get'
        );

        delete window.transmitFunc;
        return o;
    };
    console.log('Pompo factory initialized.');
};

export function transmit(obj) {
    if (window.transmitFunc) {
        window.transmitFunc(obj);
    }
};
